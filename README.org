#+TITLE: Leetcode Solution
#+AUTHOR: Dang Quang Vu <vugomars@gmail.com>

** Introduction
- There are new leetcode questions every week. I'll keep updateing for full summary and better solutions.
- Hope you enjoy the hourney of learning data structures and algorithms
- Some problems i will make a video to explain its problems solving on my youtube channel
 [[https://www.youtube.com/@blockofvu][blockofvu]]
** Another problem solutions (update soon)
- [[https://github.com/vugomars/rust-algorithms][Data Structures & Algorithms]]
- Lintcode
- GoogleKickStart
- GoogleCodeJamlO
** Challengin problem solutions (update soon)
- GoogleCodeJam
- MetaHackerCup

** Possible Algorithms & Techniques

|      n | Complexity | Possible Algorithms & Techniques                                                                       |
|--------+------------+--------------------------------------------------------------------------------------------------------|
| 10^18+ | O(1)       | Math                                                                                                   |
|  10^18 | O(logn)    | Binary & Ternary Search / Matrix Power / Cycle Tricks / Big Simulation Steps / Values Reranking / Math |
|  10^16 | O(n^1/2)   | Math                                                                                                   |
|   10^8 | O(n)       | Greedy / Ad-hoc / DP                                                                                   |
| 4x10^7 | O(nlogn)   | Linear # Calls to Binary & Rernary Search / Pre-processing & Querying / Divide and Conquer             |
|   10^4 | O(n^2)     | Ad-hoc / DP / Greedy / Divide & Conquer / Branch & Bound                                               |
|    500 | O(n^3)     | Ad-hoc / DP / Greedy / Divide & Conquer / Branch & Bound                                               |
|     90 | O(n^4)     | Ad-hoc / DP / Greedy / Divide & Conquer / Branch & Bound                                               |
|     50 | O(n^5)     | Branch & Bound                                                                                         |
|     40 | O(nx2^n)   | Meet in the Middle                                                                                     |
|     20 | O(nx2^n)   | Backtracking / Generating 2^n Subsets / Bitmask Technique                                              |
|     11 | O(n!)      | Factorial / Permutation / Combination Algorithm                                                      |
|--------+------------+--------------------------------------------------------------------------------------------------------|

** Solutions

|    # | Title                                                   | Solution | Time | Space | Difficulty | Note |
| 1480 | [[./rust/src/easy/p1480.rs][Running Sum of 1d Array]]                                 | Rust     | O(n) | O(1)  | easy       |      |
| 1491 | [[./rust/src/easy/p1491.rs][Average Salary Excluding the Minimum and Maximum Salary]] | Rust     | O(n) | O(1) | easy       |      |
